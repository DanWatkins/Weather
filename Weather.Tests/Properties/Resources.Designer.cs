//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Weather.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Weather.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;response&gt;
        ///	&lt;version&gt;0.1&lt;/version&gt;
        ///	&lt;termsofService&gt;http://www.wunderground.com/weather/api/d/terms.html&lt;/termsofService&gt;
        ///	&lt;features&gt;
        ///		&lt;feature&gt;conditions&lt;/feature&gt;
        ///	&lt;/features&gt;
        ///		&lt;error&gt;
        ///		&lt;type&gt;querynotfound&lt;/type&gt;
        ///		&lt;description&gt;No cities match your search query&lt;/description&gt;
        ///	&lt;/error&gt;
        ///&lt;/response&gt;
        ///.
        /// </summary>
        internal static string CurrentConditions_ErrorNoCities {
            get {
                return ResourceManager.GetString("CurrentConditions_ErrorNoCities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;response&gt;
        ///	&lt;version&gt;0.1&lt;/version&gt;
        ///	&lt;termsofService&gt;http://www.wunderground.com/weather/api/d/terms.html&lt;/termsofService&gt;
        ///	&lt;features&gt;
        ///		&lt;feature&gt;conditions&lt;/feature&gt;
        ///	&lt;/features&gt;
        ///  &lt;current_observation&gt;
        ///		&lt;image&gt;
        ///		&lt;url&gt;http://icons.wxug.com/graphics/wu2/logo_130x80.png&lt;/url&gt;
        ///		&lt;title&gt;Weather Underground&lt;/title&gt;
        ///		&lt;link&gt;http://www.wunderground.com&lt;/link&gt;
        ///		&lt;/image&gt;
        ///		&lt;display_location&gt;
        ///		&lt;full&gt;Naples, FL&lt;/full&gt;
        ///		&lt;city&gt;Naples&lt;/city&gt;
        ///		&lt;state&gt;FL&lt;/state&gt;
        ///		&lt;state_name&gt;Florida&lt;/state_name&gt;
        ///		&lt;country&gt;US&lt;/coun [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CurrentConditions_Zip_34101 {
            get {
                return ResourceManager.GetString("CurrentConditions_Zip_34101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;response&gt;
        ///  &lt;version&gt;0.1&lt;/version&gt;
        ///  &lt;termsofService&gt;http://www.wunderground.com/weather/api/d/terms.html&lt;/termsofService&gt;
        ///  &lt;features&gt;
        ///    &lt;feature&gt;conditions&lt;/feature&gt;
        ///  &lt;/features&gt;
        ///  &lt;current_observation&gt;
        ///    &lt;image&gt;
        ///      &lt;url&gt;http://icons.wxug.com/graphics/wu2/logo_130x80.png&lt;/url&gt;
        ///      &lt;title&gt;Weather Underground&lt;/title&gt;
        ///      &lt;link&gt;http://www.wunderground.com&lt;/link&gt;
        ///    &lt;/image&gt;
        ///    &lt;display_location&gt;
        ///      &lt;full&gt;Hugo, MN&lt;/full&gt;
        ///      &lt;city&gt;Hugo&lt;/city&gt;
        ///      &lt;state&gt;MN&lt;/state&gt;
        ///      &lt;state_name&gt;Minne [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CurrentConditions_Zip_55038 {
            get {
                return ResourceManager.GetString("CurrentConditions_Zip_55038", resourceCulture);
            }
        }
    }
}
